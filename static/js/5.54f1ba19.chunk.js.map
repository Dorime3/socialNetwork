{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","img","id","name","className","s","dialog","active","src","alt","to","Message","message","maxLength40","maxLength","AddMessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","messageCreate","Field","component","Textarea","placeholder","validate","required","Dialogs","auth","dialogs","dialogItems","DialogElements","messages","MessageElements","formData","addMessage","newMessageBody","mapStateToPropsRedirect","state","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dialogsPage","messageText","MessageText","DialogData","map","el","MessageData","dispatch","messageBody","addMessageActionCreator"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,cAAgB,iC,sGCa3OC,EAVI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAE3B,OACI,sBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAjC,UACI,qBAAKC,IAAKP,EAAKQ,IAAI,QACnB,cAAC,IAAD,CAASC,GAAI,YAAcR,EAA3B,SAAiCC,QCE9BQ,EARC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OACI,qBAAKR,UAAWC,IAAEO,QAAlB,SACKA,K,0CCsBPC,EAAcC,YAAU,IAYxBC,EAAsBC,YAAU,CAAEC,KAAM,uBAAlBD,EAVL,SAACE,GACpB,OACI,sBAAMC,SAAUD,EAAME,aAAtB,SACI,sBAAKhB,UAAWC,IAAEgB,cAAlB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,YAAY,qBAAqBtB,KAAK,iBAAiBuB,SAAU,CAACC,IAAUd,KACxG,kDAQDe,EAlCC,SAACV,GAGb,IAAKA,EAAMW,KAAM,OAAO,cAAC,IAAD,CAAUnB,GAAG,UAIrC,OACI,sBAAKN,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAE0B,YAAlB,SACKb,EAAMc,iBAEX,sBAAK5B,UAAWC,IAAE4B,SAAlB,UACI,8BAAMf,EAAMgB,kBACZ,cAACnB,EAAD,CAAqBI,SAVT,SAACgB,GACrBjB,EAAMkB,WAAWD,EAASE,0B,+CCV5BC,EAA0B,SAACC,GAAD,MAAY,CACxCV,KAAMU,EAAMV,KAAKA,OAkBNW,EAfU,SAACC,GAAe,IAE/BC,EAF8B,4JAGhC,WACI,OAAKC,KAAKzB,MAAMW,KAEZ,cAACY,EAAD,eAAeE,KAAKzB,QAFK,cAAC,IAAD,CAAUR,GAAG,cAJd,GAEJkC,IAAMH,WAUtC,OAF8BI,YAAQP,EAARO,CAAiCH,I,QCYpDI,sBACXD,aAtBoB,SAACN,GACrB,MAAO,CACHQ,YAAaR,EAAMQ,YACnBC,YAAaT,EAAMQ,YAAYE,YAC/BjB,eAAgBO,EAAMQ,YAAYG,WAAWC,KAAI,SAAAC,GAAE,OAC/C,cAAC,EAAD,CAAYjD,KAAMiD,EAAGjD,KAAMD,GAAIkD,EAAGlD,GAAID,IAAKmD,EAAGnD,SAElDiC,gBAAiBK,EAAMQ,YAAYM,YAAYF,KAAI,SAAAC,GAAE,OACjD,cAAC,EAAD,CAASxC,QAASwC,EAAGxC,QAASV,GAAIkD,EAAGlD,YAKtB,SAACoD,GACxB,MAAO,CACHlB,WAAY,SAACmB,GACTD,EAASE,YAAwBD,SAOzCf,EAFWM,CAGVlB","file":"static/js/5.54f1ba19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2KAke\",\"dialogItems\":\"Dialogs_dialogItems__1yKzJ\",\"active\":\"Dialogs_active__1gZY0\",\"dialog\":\"Dialogs_dialog__1n7hF\",\"messages\":\"Dialogs_messages__2w6BJ\",\"message\":\"Dialogs_message__3RY6Q\",\"messageCreate\":\"Dialogs_messageCreate__2q2de\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = ({ img, id, name }) => {\r\n\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <img src={img} alt='ava' />\r\n            <NavLink to={'/dialogs/' + id} >{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = ({ message }) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './Dialogs.module.css';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsContriols/FormsControls';\r\nimport { maxLength, required } from '../../utils/validators/validators';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    if (!props.auth) return <Redirect to='/auth' />\r\n    const onSumbitMessage = (formData) => {\r\n        props.addMessage(formData.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {props.DialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{props.MessageElements}</div>\r\n                <AddMessageReduxForm onSubmit={onSumbitMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength40 = maxLength(40);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.messageCreate}>\r\n                <Field component={Textarea} placeholder='Enter your message' name='newMessageBody' validate={[required, maxLength40]} />\r\n                <button >Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm({ form: 'addMessageReduxForm' })(AddMessageForm)\r\n\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n    auth: state.auth.auth\r\n})\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) return <Redirect to='/auth' />\r\n            return (\r\n                <Component {...this.props} />\r\n            )\r\n        }\r\n    }\r\n    const authRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return authRedirectComponent\r\n}\r\n\r\nexport default withAuthRedirect","import React from 'react';\r\nimport { addMessageActionCreator, updateMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        messageText: state.dialogsPage.MessageText,\r\n        DialogElements: state.dialogsPage.DialogData.map(el => (\r\n            <DialogItem name={el.name} id={el.id} img={el.img} />\r\n        )),\r\n        MessageElements: state.dialogsPage.MessageData.map(el => (\r\n            <Message message={el.message} id={el.id} />\r\n        ))\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (messageBody) => {\r\n            dispatch(addMessageActionCreator(messageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n    (Dialogs)"],"sourceRoot":""}