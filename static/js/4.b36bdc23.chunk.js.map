{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/hoc/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","img","id","name","className","s","dialog","active","src","alt","to","Message","props","message","maxLength40","maxLength","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","messageCreate","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogs","dialogItems","dialogsPage","DialogData","map","el","messages","MessageData","formData","addMessage","newMessageBody","mapStateToPropsRedirect","state","auth","withAuthRedirect","WrappedComponent","connect","restProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","compose","actions"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,cAAgB,iC,+HCmB3OC,EAVyB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAEhD,OACI,sBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAjC,UACI,qBAAKC,IAAKP,EAAKQ,IAAI,QACnB,cAAC,IAAD,CAASC,GAAI,YAAcR,EAA3B,SAAiCC,QCD9BQ,EARsB,SAACC,GAClC,OACI,qBAAKR,UAAWC,IAAEQ,QAAlB,SACKD,EAAMC,WCgCbC,EAAcC,YAAU,IAexBC,EAAsBC,YAAkD,CAAEC,KAAM,uBAA1DD,EAVqF,SAACL,GAC9G,OACI,sBAAMO,SAAUP,EAAMQ,aAAtB,SACI,sBAAKhB,UAAWC,IAAEgB,cAAlB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,YAAY,qBAAqBtB,KAAK,iBAAiBuB,SAAU,CAACC,IAAUb,KACxG,kDAODc,EAtCsB,SAAChB,GAKlC,OACI,sBAAKR,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAEyB,YAAlB,SACKlB,EAAMmB,YAAYC,WAAWC,KAAI,SAAAC,GAAE,OAChC,cAAC,EAAD,CAAY/B,KAAM+B,EAAG/B,KAAMD,GAAIgC,EAAGhC,GAAID,IAAKiC,EAAGjC,WAGtD,sBAAKG,UAAWC,IAAE8B,SAAlB,UACI,8BAAMvB,EAAMmB,YAAYK,YAAYH,KAAI,SAAAC,GAAE,OACtC,cAAC,EAAD,CAASrB,QAASqB,EAAGrB,eAEzB,cAACG,EAAD,CAAqBG,SAdT,SAACkB,GACrBzB,EAAM0B,WAAWD,EAASE,0B,8CClB5BC,EAA0B,SAACC,GAAD,MAA0B,CACtDC,KAAMD,EAAMC,KAAKA,OA4BNC,MAnBf,SAA+BC,GAgB3B,OAJ8BC,YAC1BL,EAD0BK,EAVwC,SAACjC,GAEnE,IAAM8B,EAAuB9B,EAAvB8B,KAASI,EClBR,SAAkCC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,EAAS,OAAAC,EAAA,GAA6BL,EAAQC,GAGlD,GAAIK,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBP,GAEpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBC,OAAQN,IACvCD,EAAMM,EAAiBL,GACnBF,EAASS,QAAQR,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,EDED,CAA6BvC,EAA7B,GACA,OAAK8B,EAGD,cAACE,EAAD,eAAsBE,IAHR,cAAC,IAAD,CAAUpC,GAAG,c,QEHxBmD,sBACXhB,aARoB,SAACJ,GACrB,MAAO,CACHV,YAAaU,EAAMV,eAME,CACrBO,WAAYwB,IAAQxB,aAExBK,EAJWkB,CAKVjC","file":"static/js/4.b36bdc23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2KAke\",\"dialogItems\":\"Dialogs_dialogItems__1yKzJ\",\"active\":\"Dialogs_active__1gZY0\",\"dialog\":\"Dialogs_dialog__1n7hF\",\"messages\":\"Dialogs_messages__2w6BJ\",\"message\":\"Dialogs_message__3RY6Q\",\"messageCreate\":\"Dialogs_messageCreate__2q2de\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\nconst DialogItem: React.FC<PropsType> = ({ img, id, name }) => {\r\n\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <img src={img} alt='ava' />\r\n            <NavLink to={'/dialogs/' + id} >{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './Dialogs.module.css';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsContriols/FormsControls';\r\nimport { maxLength, required } from '../../utils/validators/validators';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport { initialStateType } from '../../redux/dialogs-reducer';\r\n\r\ntype PropsType = {\r\n    dialogsPage: initialStateType\r\n    addMessage: (messageText: string) => void\r\n};\r\n\r\nexport type NewMessageFormType = {\r\n    newMessageBody: string\r\n}\r\n//type NewMessageFormValuesKeysType = Extract<keyof NewMessageFormType, string>\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    const onSumbitMessage = (formData: NewMessageFormType) => {\r\n        props.addMessage(formData.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {props.dialogsPage.DialogData.map(el => (\r\n                    <DialogItem name={el.name} id={el.id} img={el.img} />\r\n                ))}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{props.dialogsPage.MessageData.map(el => (\r\n                    <Message message={el.message} />\r\n                ))}</div>\r\n                <AddMessageReduxForm onSubmit={onSumbitMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength40 = maxLength(40);\r\n\r\ntype PropsTypeReduxForm = {\r\n\r\n}\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormType, PropsTypeReduxForm> & PropsTypeReduxForm> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.messageCreate}>\r\n                <Field component={Textarea} placeholder='Enter your message' name='newMessageBody' validate={[required, maxLength40]} />\r\n                <button >Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm<NewMessageFormType, PropsTypeReduxForm>({ form: 'addMessageReduxForm' })(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AppStateType } from '../../redux/redux-store'\r\n\r\nconst mapStateToPropsRedirect = (state: AppStateType) => ({\r\n    auth: state.auth.auth\r\n})\r\n\r\ntype MapPropsType = {\r\n    auth: boolean\r\n}\r\ntype DispatchPropsType = {\r\n}\r\n\r\nfunction withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n\r\n        let { auth, ...restProps } = props\r\n        if (!auth) return <Redirect to='/auth' />\r\n\r\n        return (\r\n            <WrappedComponent {...restProps as WCP} />\r\n        )\r\n    }\r\n\r\n    const authRedirectComponent = connect<MapPropsType, DispatchPropsType, WCP, AppStateType>(\r\n        mapStateToPropsRedirect)\r\n        (RedirectComponent);\r\n\r\n    return authRedirectComponent\r\n}\r\n\r\nexport default withAuthRedirect","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react';\r\nimport { actions } from '../../redux/dialogs-reducer';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        addMessage: actions.addMessage\r\n    }),\r\n    withAuthRedirect)\r\n    (Dialogs)"],"sourceRoot":""}